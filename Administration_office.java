import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Observable;
import java.util.Observer;

import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SpringLayout;

/* Generated by Together */

/**
 * This class represents the interactive interface to PACSUS administration functions carried
 * out in the Estates and Campus Services Office.  Information about these functions is in the
 * Administration use case diagram (hyperlinked from this class).
 *
 * The interface comprises one screen with all the functions present on it: they could all be on
 * view at once, or perhaps in alternative JPanels (in a JFrame with JTabbedPane); the current
 * date (day number) is always displayed.
 *
 * There could be any number of instances of this class, potentially one for each workstation
 * in the office, with different staff carrying different functions.
 *
 * The class implements Observer, and observes the system status so that it can keep the displayed current date correct.
 * @stereotype boundary
 */
public class Administration_office extends JFrame implements Observer, ActionListener {
    /**
     * Each instance of Administration_office has a navigable association to the permit list so
     * that it can enquire about/add/delete/modify permits.
     * @supplierCardinality 1
     * @clientCardinality 1..*
     * @label Administration functions
     * @directed
     */
    private Permit_list lnkPermit_list;

    /**
     * Each instance of Administration_office has a navigable association to the vehicle list so
     * that it can enquire about/add/delete/modify vehicle details.
     * @clientCardinality 1..*
     * @supplierCardinality 1
     * @label Administration functions
     * @directed
     */
    private Vehicle_list lnkVehicle_list;

    /**
     * Each instance of Administration_office has a navigable association to the system status so
     * that it can find out status information about the system.
     * @clientCardinality 1..*
     * @supplierCardinality 1
     * @label See date
     * @directed
     */
    private System_status lnkSystem_status;
    
    private JButton btn1, btn2, btn3, btn4, btn5, btn6;
    private JLabel lblName, lblReg, lblReg2, lblReg3, lblReg4,lblReg5, 
    lblReg6, lblMake, lblModel, lblColour, lblType, 
    lblDate, lblHost, lblRec, lblDel, lblCancel, lblMod, lblEnq;
    
    private JTextField txtName, txtReg, txtReg2, txtReg3, txtReg4, txtReg5, txtReg6,
    txtMake, txtModel, txtColour, txtDate, txtHost;
    private JComboBox bxType;
    private JPanel addPermit, recWarning, delWarning, cancelPermit, statusEnquiry, modPermit;
    private JTabbedPane tab;
    private GridLayout grid;
    
    public Administration_office(System_status s, Vehicle_list v, Permit_list p) {
    	lnkSystem_status = s;
    	lnkVehicle_list = v;
    	lnkPermit_list = p;
    	
    	setTitle("Administation Office   Date: ");
        setLocation(40,200);
        setSize(450,350);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        Container window = getContentPane();
        //window.setLayout(new GridLayout(0, 3));   
        
        tab = new JTabbedPane();
        addPermit = new JPanel();
        recWarning = new JPanel();
        delWarning = new JPanel();
        cancelPermit = new JPanel();
        statusEnquiry = new JPanel();
        modPermit = new JPanel();
        
        
        grid = new GridLayout(0, 2);
        addPermit.setLayout(grid);
        recWarning.setLayout(grid);
        delWarning.setLayout(grid);
        cancelPermit.setLayout(grid);
        statusEnquiry.setLayout(grid);
        modPermit.setLayout(grid);

        
        //Add permit tab
        lblName = new JLabel("Name:");
        txtName = new JTextField("", 15);
        addPermit.add(lblName, BorderLayout.CENTER);
        addPermit.add(txtName, BorderLayout.CENTER);
        
        lblReg = new JLabel("Registration Number:");
        txtReg = new JTextField("", 15);
        addPermit.add(lblReg, BorderLayout.CENTER);
        addPermit.add(txtReg, BorderLayout.CENTER);

        
        lblMake = new JLabel("Car make: ");
        txtMake = new JTextField("", 15);
        addPermit.add(lblMake);
        addPermit.add(txtMake);
        
        lblModel = new JLabel("Car model: ");
        txtModel = new JTextField("", 15);
        addPermit.add(lblModel);
        addPermit.add(txtModel);
        
        lblColour = new JLabel("Car colour: ");
        txtColour = new JTextField("", 15);
        addPermit.add(lblColour);
        addPermit.add(txtColour);
        
        
        String[] permitTypes = {"Day Visitor", "University Member", "Regular Visitor", "Permanent Visitor"};
        lblType = new JLabel("Enter Permit Type: ");
        bxType = new JComboBox(permitTypes);
        bxType.setSelectedIndex(3);
        //petList.addActionListener(this);
        //txtType = new JTextField("", 15);
        addPermit.add(lblType);
        addPermit.add(bxType);
        
        lblDate = new JLabel("Visit date: ");
        txtDate = new JTextField("", 15);
        addPermit.add(lblDate);
        addPermit.add(txtDate);
        
        lblHost = new JLabel("Host name: ");
        txtHost = new JTextField("", 15);
        addPermit.add(lblHost);
        addPermit.add(txtHost);
        
        btn1 = new JButton("Submit");
        btn1.addActionListener(this);
        addPermit.add(btn1);

        
        //Warning tab
        lblReg2 = new JLabel("Registration Number:");
        txtReg2 = new JTextField("", 15);
        recWarning.add(lblReg2, BorderLayout.CENTER);
        recWarning.add(txtReg2, BorderLayout.CENTER);
        //may need to add date
        
        lblRec = new JLabel("Record warning");
        recWarning.add(lblRec, BorderLayout.CENTER);
        btn2 = new JButton("Record");
        btn2.addActionListener(this);
        recWarning.add(btn2);
        
        
        //Delete warning tab
        lblReg3 = new JLabel("Registration Number:");
        txtReg3 = new JTextField("", 15);
        delWarning.add(lblReg3, BorderLayout.CENTER);
        delWarning.add(txtReg3, BorderLayout.CENTER);

        lblDel = new JLabel("Delete warning");
        delWarning.add(lblDel, BorderLayout.CENTER);
        btn3 = new JButton("Delete");
        btn3.addActionListener(this);
        delWarning.add(btn3);
        
        //Cancel Permit tab
        lblReg4 = new JLabel("Registration Number:");
        txtReg4 = new JTextField("", 15);
        cancelPermit.add(lblReg4, BorderLayout.CENTER);
        cancelPermit.add(txtReg4, BorderLayout.CENTER);

        lblCancel = new JLabel("Cancel Permit");
        cancelPermit.add(lblCancel, BorderLayout.CENTER);
        btn4 = new JButton("Cancel");
        btn4.addActionListener(this);
        cancelPermit.add(btn4);
        
        //Status Enquiry tab
        lblReg5 = new JLabel("Registration Number:");
        txtReg5 = new JTextField("", 15);
        statusEnquiry.add(lblReg5, BorderLayout.CENTER);
        statusEnquiry.add(txtReg5, BorderLayout.CENTER);

        lblEnq = new JLabel("Status Enquiry");
        statusEnquiry.add(lblEnq, BorderLayout.CENTER);
        btn5 = new JButton("Enquire");
        btn5.addActionListener(this);
        statusEnquiry.add(btn5);
        
        //Modify Permit
        lblReg6 = new JLabel("Registration Number:");
        txtReg6 = new JTextField("", 15);
        modPermit.add(lblReg6, BorderLayout.CENTER);
        modPermit.add(txtReg6, BorderLayout.CENTER);

        lblMod = new JLabel("Modify Permit");
        modPermit.add(lblMod, BorderLayout.CENTER);
        btn6 = new JButton("Modify");
        btn6.addActionListener(this);
        modPermit.add(btn6);

        
        tab.addTab("Add permit", addPermit);
        tab.addTab("Record warning", recWarning);
        tab.addTab("Delete warning", delWarning);
        tab.addTab("Cancel permit", cancelPermit);
        tab.addTab("Status Enquiry", statusEnquiry);
        tab.addTab("Modify Permit", modPermit);
        tab.setSelectedIndex(0);
        
        window.add(tab);
        setVisible(true);
    }
    

	@Override
	public void update(Observable o, Object arg) {
		// TODO Auto-generated method stub
		
	}


	@Override
	public void actionPerformed(ActionEvent e) {
		//String button = e.getActionCommand();
		if (e.getSource()==btn1) {			//Add permit
			String name = txtName.getText();
			String reg = txtReg.getText();
			String make = txtMake.getText();
			String model = txtModel.getText();
			String colour = txtColour.getText();
			String type = (String) bxType.getSelectedItem();
			String date = txtDate.getText();
			String host = txtHost.getText();
			System.out.println(name + " " + reg+ " " + make + " " + model + " " + colour+ " " + type + " " + date + " " + host);
			
			if (type.equals("Day Visitor")) {
				lnkVehicle_list.addVehicle(reg, make, model, colour, name);
				Vehicle_info v = lnkVehicle_list.getVehicle(reg);
				lnkPermit_list.addPermit(1, name, host, 1, v);
				
			}else if (type.equals("University Member")) {
				lnkVehicle_list.addVehicle(reg, make, model, colour, name);
				Vehicle_info v = lnkVehicle_list.getVehicle(reg);
				lnkPermit_list.addPermit(2, name, host, 0, v);

				
			}else if (type.equals("Regular Visitor")) {
				lnkVehicle_list.addVehicle(reg, make, model, colour, name);
				Vehicle_info v = lnkVehicle_list.getVehicle(reg);
				lnkPermit_list.addPermit(3, name, host, 0, v);

				
			}else if (type.equals("Permanent Visitor")) {
				lnkVehicle_list.addVehicle(reg, make, model, colour, name);
				Vehicle_info v = lnkVehicle_list.getVehicle(reg);
				lnkPermit_list.addPermit(4, name, host, 0, v);				
			}
			
		}else if (e.getSource()==btn2) {	//Record Warning
			String reg2 = txtReg2.getText();
			System.out.println("btn2");
			if(lnkVehicle_list.setWarning(reg2)) {
				System.out.println("Warning added");
			}else {
				System.out.println("Warning failed, vehicle does not have permit");
			}
			
		}else if (e.getSource()==btn3) {	//Delete Warning
			String reg3 = txtReg3.getText();
			if(lnkVehicle_list.deleteWarning(reg3)) {
				System.out.println("Warning deleted");
			}else {
				System.out.println("Warning delete failed, vehicle does not have permit");
			}

		}else if (e.getSource()==btn4) {	//Cancel Permit
			System.out.println("btn4");
			String reg4 = txtReg4.getText();
			//lnkPermit_list.removePermit(int UID)

		}else if (e.getSource()==btn5) {	//Status Enquiry - A member of the administration is able to obtain status details for a given user: details of permit, whether warnings are recorded, whether suspended, and how many entries to campus have occurred since the permit was issued.
			System.out.println("btn5");

		}else if (e.getSource()==btn6) {	//Modify Permit - Change details in the permit, maybe enter name or reg and click get which will display the details in the boxes, and change boxes to modify it (dont modify reg or user ID)
			System.out.println("btn6");

		}
	}
}
