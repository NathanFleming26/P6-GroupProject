import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;

/* Generated by Together */

/**
 * This class represents the interactive interface to PACSUS administration functions carried
 * out in the Estates and Campus Services Office.  Information about these functions is in the
 * Administration use case diagram (hyperlinked from this class).
 *
 * The interface comprises one screen with all the functions present on it: they could all be on
 * view at once, or perhaps in alternative JPanels (in a JFrame with JTabbedPane); the current
 * date (day number) is always displayed.
 *
 * There could be any number of instances of this class, potentially one for each workstation
 * in the office, with different staff carrying different functions.
 *
 * The class implements Observer, and observes the system status so that it can keep the displayed current date correct.
 * @stereotype boundary
 */
public class Administration_office extends JFrame implements Observer, ActionListener {
	/**
	 * Each instance of Administration_office has a navigable association to the permit list so
	 * that it can enquire about/add/delete/modify permits.
	 * @supplierCardinality 1
	 * @clientCardinality 1..*
	 * @label Administration functions
	 * @directed
	 */
	private Permit_list lnkPermit_list;

	/**
	 * Each instance of Administration_office has a navigable association to the vehicle list so
	 * that it can enquire about/add/delete/modify vehicle details.
	 * @clientCardinality 1..*
	 * @supplierCardinality 1
	 * @label Administration functions
	 * @directed
	 */
	private Vehicle_list lnkVehicle_list;

	/**
	 * Each instance of Administration_office has a navigable association to the system status so
	 * that it can find out status information about the system.
	 * @clientCardinality 1..*
	 * @supplierCardinality 1
	 * @label See date
	 * @directed
	 */
	private System_status lnkSystem_status;
	private int date=1;
	boolean editable = false;

	//Declare elements used in JFrame
	private JButton btn1, btn2, btn3, btn4, btn5, btn6, btnClear,btnClear1, btnR, btnmClear;
	private JLabel lblName, lblReg, lblReg2, lblReg3, lblReg4,lblReg5, 
	lblReg6, lblMake, lblModel, lblColour, lblType, 
	lblDate, lblHost, lblRec, lblDel, lblCancel, lblMod, lblEnq;

	private JLabel lbleName, lbleReg, lbleMake, lbleModel, lbleColour, lbleType, lbleDate, lbleHost, lbleWarnings, lbleSuspended, lbleAccess;//labels for enquiry
	private JTextField txteName, txteReg, txteMake, txteModel, txteColour, txteType, txteDate, txtmHost, txteWarnings, txteSuspended, txteAccess;

	private JLabel lblmName, lblmReg, lblmMake, lblmModel, lblmColour, lblmType, lblmDate, lblmHost;//labels for m
	private JTextField txtmName, txtmReg, txtmMake, txtmModel, txtmColour, txtmType, txtmDate;

	private JTextField txtName, txtReg, txtReg2, txtReg3, txtReg4, txtReg5, txtReg6,
	txtMake, txtModel, txtColour, txtDate, txtHost, txteHost;
	private JComboBox bxType;
	private JPanel addPermit, recWarning, delWarning, cancelPermit, statusEnquiry, modPermit;
	private JTabbedPane tab;
	private GridLayout grid;

	//Create the UI for Admin office
	public Administration_office(System_status s, Vehicle_list v, Permit_list p) {		//Constructor for Administration_office, sets up the window 
		//instances of classes used
		lnkSystem_status = s;
		lnkVehicle_list = v;
		lnkPermit_list = p;

		setTitle("Administation Office   " + date);
		setLocation(40,200);
		setSize(450,350);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		Container window = getContentPane();


		//sets a tabbed pane and declare JPanels used within in
		tab = new JTabbedPane();
		addPermit = new JPanel();
		recWarning = new JPanel();
		delWarning = new JPanel();
		cancelPermit = new JPanel();
		statusEnquiry = new JPanel();
		modPermit = new JPanel();

		//layout of the tabs
		grid = new GridLayout(0, 2);
		addPermit.setLayout(grid);
		recWarning.setLayout(grid);
		delWarning.setLayout(grid);
		cancelPermit.setLayout(grid);
		statusEnquiry.setLayout(grid);
		modPermit.setLayout(grid);


		//PERMIT TAB
		lblName = new JLabel("Name:");
		txtName = new JTextField("", 15);
		addPermit.add(lblName, BorderLayout.CENTER);
		addPermit.add(txtName, BorderLayout.CENTER);

		lblReg = new JLabel("Registration Number:");
		txtReg = new JTextField("", 15);
		addPermit.add(lblReg, BorderLayout.CENTER);
		addPermit.add(txtReg, BorderLayout.CENTER);


		lblMake = new JLabel("Car make: ");
		txtMake = new JTextField("", 15);
		addPermit.add(lblMake);
		addPermit.add(txtMake);

		lblModel = new JLabel("Car model: ");
		txtModel = new JTextField("", 15);
		addPermit.add(lblModel);
		addPermit.add(txtModel);

		lblColour = new JLabel("Car colour: ");
		txtColour = new JTextField("", 15);
		addPermit.add(lblColour);
		addPermit.add(txtColour);


		String[] permitTypes = {"Day Visitor", "University Member", "Regular Visitor", "Permanent Visitor"};	//available types of passes
		lblType = new JLabel("Enter Permit Type: ");
		bxType = new JComboBox(permitTypes);
		bxType.setSelectedIndex(0);
		addPermit.add(lblType);
		addPermit.add(bxType);

		lblDate = new JLabel("Visit date: ");
		txtDate = new JTextField("", 15);
		addPermit.add(lblDate);
		addPermit.add(txtDate);

		lblHost = new JLabel("Host name: ");
		txtHost = new JTextField("", 15);
		addPermit.add(lblHost);
		addPermit.add(txtHost);

		btn1 = new JButton("Submit");
		btn1.addActionListener(this);
		addPermit.add(btn1);
		
		btnClear1 = new JButton("Clear");
		btnClear1.addActionListener(this);
		addPermit.add(btnClear1);


		//Warning tab
		lblReg2 = new JLabel("Registration Number: ");
		txtReg2 = new JTextField("", 15);
		recWarning.add(lblReg2, BorderLayout.CENTER);
		recWarning.add(txtReg2, BorderLayout.CENTER);
		//may need to add date

		lblRec = new JLabel("Record warning");
		recWarning.add(lblRec, BorderLayout.CENTER);
		btn2 = new JButton("Record");
		btn2.addActionListener(this);
		recWarning.add(btn2);


		//Delete warning tab
		lblReg3 = new JLabel("Registration Number:");
		txtReg3 = new JTextField("", 15);
		delWarning.add(lblReg3, BorderLayout.CENTER);
		delWarning.add(txtReg3, BorderLayout.CENTER);

		lblDel = new JLabel("Delete warning");
		delWarning.add(lblDel, BorderLayout.CENTER);
		btn3 = new JButton("Delete");
		btn3.addActionListener(this);
		delWarning.add(btn3);

		//Cancel Permit tab
		lblReg4 = new JLabel("Permit holder name:");
		txtReg4 = new JTextField("", 15);
		cancelPermit.add(lblReg4, BorderLayout.CENTER);
		cancelPermit.add(txtReg4, BorderLayout.CENTER);

		lblCancel = new JLabel("Cancel Permit");
		cancelPermit.add(lblCancel, BorderLayout.CENTER);
		btn4 = new JButton("Cancel");
		btn4.addActionListener(this);
		cancelPermit.add(btn4);

		//Status Enquiry tab

		lbleName = new JLabel("Name:");
		txteName = new JTextField("", 15);
		statusEnquiry.add(lbleName, BorderLayout.CENTER);
		statusEnquiry.add(txteName, BorderLayout.CENTER);

		lbleReg = new JLabel("Registration Number:");
		txteReg = new JTextField("", 15);
		txteReg.setEditable(false);
		statusEnquiry.add(lbleReg, BorderLayout.CENTER);
		statusEnquiry.add(txteReg, BorderLayout.CENTER);


		lbleMake = new JLabel("Car make: ");
		txteMake = new JTextField("", 15);
		txteMake.setEditable(false);
		statusEnquiry.add(lbleMake);
		statusEnquiry.add(txteMake);

		lbleModel = new JLabel("Car model: ");
		txteModel = new JTextField("", 15);
		txteModel.setEditable(false);
		statusEnquiry.add(lbleModel);
		statusEnquiry.add(txteModel);

		lbleColour = new JLabel("Car colour: ");
		txteColour = new JTextField("", 15);
		txteColour.setEditable(false);
		statusEnquiry.add(lbleColour);
		statusEnquiry.add(txteColour);

		lbleType = new JLabel("Permit Type: ");
		txteType = new JTextField("", 15);
		txteType.setEditable(false);
		statusEnquiry.add(lbleType);
		statusEnquiry.add(txteType);


		lbleHost = new JLabel("Host name: ");
		txteHost = new JTextField("", 15);
		txteHost.setEditable(false);
		statusEnquiry.add(lbleHost);
		statusEnquiry.add(txteHost);

		lbleWarnings = new JLabel("Warnings: ");
		txteWarnings = new JTextField("", 15);
		txteWarnings.setEditable(false);
		statusEnquiry.add(lbleWarnings);
		statusEnquiry.add(txteWarnings);

		lbleSuspended = new JLabel("Suspended: ");
		txteSuspended = new JTextField("", 15);
		txteSuspended.setEditable(false);
		statusEnquiry.add(lbleSuspended);
		statusEnquiry.add(txteSuspended);

		lbleAccess = new JLabel("Times accessed: ");
		txteAccess = new JTextField("", 15);
		txteAccess.setEditable(false);
		statusEnquiry.add(lbleAccess);
		statusEnquiry.add(txteAccess);

		btn5 = new JButton("Enquire");
		btn5.addActionListener(this);
		statusEnquiry.add(btn5);

		btnClear = new JButton("Clear");
		btnClear.addActionListener(this);
		statusEnquiry.add(btnClear);



		//Modify Permit

		lblmName = new JLabel("Name:");
		txtmName = new JTextField("", 15);
		modPermit.add(lblmName, BorderLayout.CENTER);
		modPermit.add(txtmName, BorderLayout.CENTER);

		lblmReg = new JLabel("Registration Number:");
		txtmReg = new JTextField("", 15);
		txtmReg.setEditable(false);
		modPermit.add(lblmReg, BorderLayout.CENTER);
		modPermit.add(txtmReg, BorderLayout.CENTER);


		lblmMake = new JLabel("Car make: ");
		txtmMake = new JTextField("", 15);
		txtmMake.setEditable(false);
		modPermit.add(lblmMake);
		modPermit.add(txtmMake);

		lblmModel = new JLabel("Car model: ");
		txtmModel = new JTextField("", 15);
		txtmModel.setEditable(false);
		modPermit.add(lblmModel);
		modPermit.add(txtmModel);

		lblmColour = new JLabel("Car colour: ");
		txtmColour = new JTextField("", 15);
		txtmColour.setEditable(false);
		modPermit.add(lblmColour);
		modPermit.add(txtmColour);

		lblmType = new JLabel("Permit Type: ");
		txtmType = new JTextField("", 15);
		txtmType.setEditable(false);
		modPermit.add(lblmType);
		modPermit.add(txtmType);


		lblmHost = new JLabel("Host name: ");
		txtmHost = new JTextField("", 15);
		txtmHost.setEditable(false);
		modPermit.add(lblmHost);
		modPermit.add(txtmHost);

		btnR = new JButton("Retrieve");
		btnR.addActionListener(this);
		modPermit.add(btnR);

		btn6 = new JButton("Modify");
		btn6.addActionListener(this);
		modPermit.add(btn6);

		btnmClear = new JButton("Clear");
		btnmClear.addActionListener(this);
		modPermit.add(btnmClear);


		tab.addTab("Add permit", addPermit);
		tab.addTab("Record warning", recWarning);
		tab.addTab("Delete warning", delWarning);
		tab.addTab("Cancel permit", cancelPermit);
		tab.addTab("Status Enquiry", statusEnquiry);
		tab.addTab("Modify Permit", modPermit);
		tab.setSelectedIndex(0);

		window.add(tab);
		setVisible(true);
		lnkSystem_status.addObserver(this);
		//Clear all fields
		clearFields();
	}


	@Override
	public void update(Observable o, Object arg) {	//gets any updates
		date = lnkSystem_status.getDate();
		setTitle("Administration Office  " + date);


	}




	@Override
	public void actionPerformed(ActionEvent e) {
		//String button = e.getActionCommand();
		String[] permitTypes = {"","Day Visitor", "University Member", "Regular Visitor", "Permanent Visitor"};
		if (e.getSource()==btn1) {			//Add permit
			String name = txtName.getText();
			String reg = txtReg.getText();
			String make = txtMake.getText();
			String model = txtModel.getText();
			String colour = txtColour.getText();
			String type = (String) bxType.getSelectedItem();
			String date = txtDate.getText();
			String host = txtHost.getText();

			if(name.equals("") || reg.equals("") || make.equals("") || model.equals("")|| colour.equals("")|| date.equals(""))
			{//Check that all the fields havee been filled
				// Popup Message
				showMessageDialog(null, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);

			}else if (type.equals("Day Visitor") && host.equals("")) {
				showMessageDialog(null, "Day visitors need a host", "Error", JOptionPane.ERROR_MESSAGE);
			}else if (type.equals("Regular Visitor") && host.equals("")) {
				showMessageDialog(null, "Regular Visitor need a host", "Error", JOptionPane.ERROR_MESSAGE);
			}else if(lnkPermit_list.hasPermit(name)) {
				showMessageDialog(null, "User already has a permit", "Error", JOptionPane.ERROR_MESSAGE);
			}


			else {

				if (type.equals("Day Visitor")) {//Add a day visitor
					if (lnkPermit_list.hasPermit(host)) {
						lnkVehicle_list.addVehicle(reg, make, model, colour, name);
						Vehicle_info v = lnkVehicle_list.getVehicle(reg);
						lnkPermit_list.addPermit(1, name, host, 1, v);
						//Display Confirmation
						showMessageDialog(null, "Day Visitor Added", "Permit Added", JOptionPane.INFORMATION_MESSAGE);
					}else {//Error
						showMessageDialog(null, "Permit unsuccessful, host does not have a permit", "Error", JOptionPane.ERROR_MESSAGE);
					}

				}else if (type.equals("University Member")) {//Add a university member
					lnkVehicle_list.addVehicle(reg, make, model, colour, name);
					Vehicle_info v = lnkVehicle_list.getVehicle(reg);
					lnkPermit_list.addPermit(2, name, host, 0, v);
					showMessageDialog(null, "University Member Added", "Permit Added", JOptionPane.INFORMATION_MESSAGE);


				}else if (type.equals("Regular Visitor")) {//Add a regular visitor
					if (lnkPermit_list.hasPermit(host)) {
						lnkVehicle_list.addVehicle(reg, make, model, colour, name);
						Vehicle_info v = lnkVehicle_list.getVehicle(reg);
						lnkPermit_list.addPermit(3, name, host, 0, v);
						showMessageDialog(null, "Regular Visitor Added", "Permit Added", JOptionPane.INFORMATION_MESSAGE);
					}else {
						showMessageDialog(null, "Permit unsuccessful, host does not have a permit", "Error", JOptionPane.ERROR_MESSAGE);
					}



				}else if (type.equals("Permanent Visitor")) {//Add a Prermanent visitor
					lnkVehicle_list.addVehicle(reg, make, model, colour, name);
					Vehicle_info v = lnkVehicle_list.getVehicle(reg);
					lnkPermit_list.addPermit(4, name, host, 0, v);	
					showMessageDialog(null, "Permanent Visitor Added", "Permit Added", JOptionPane.INFORMATION_MESSAGE);
				}
			}

		}else if (e.getSource()==btn2) {	//Record Warning
			String reg2 = txtReg2.getText();
			if (reg2.equals("")) {
				showMessageDialog(null, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
			}
			else if(lnkVehicle_list.setWarning(reg2)) {//Add a warning to the vehicle specified
					showMessageDialog(null, "Warning to "+ reg2+" Added", "Warning", JOptionPane.INFORMATION_MESSAGE);
			}else {
					showMessageDialog(null, "Warning to "+ reg2+" unsuccessful, vehicle does not exist, or is suspended", "Warning", JOptionPane.INFORMATION_MESSAGE);
			}
			

		}else if (e.getSource()==btn3) {	//Delete Warning
			String reg3 = txtReg3.getText();
			if (reg3.equals("")) {//Ensure the field has been filled in appropriately
				showMessageDialog(null, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
			}else if(lnkVehicle_list.deleteWarning(reg3)) {
				showMessageDialog(null, "Warning to "+ reg3+" deleted", "Warning", JOptionPane.INFORMATION_MESSAGE);
			}else {
				showMessageDialog(null, "Warning delete unsuccessful, vehicle doesnt exist or doesnt have warnings", "Error", JOptionPane.ERROR_MESSAGE);
			}

		}else if (e.getSource()==btn4) {	//Cancel Permit
			String reg4 = txtReg4.getText();
			if (reg4.equals("")) {
				showMessageDialog(null, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
			}else if(lnkPermit_list.removePermit(reg4)) {
				showMessageDialog(null, "Permit for "+ reg4+" cancelled", "Cancel", JOptionPane.INFORMATION_MESSAGE);
			}else {
				showMessageDialog(null, "Unsucessful, vehicle does not have a permit", "Cancel", JOptionPane.ERROR_MESSAGE);
			}
			clearFields();

		}else if (e.getSource()==btn5) {	//Status Enquiry - A member of the administration is able to obtain status details for a given user: details of permit, whether warnings are recorded, whether suspended, and how many entries to campus have occurred since the permit was issued.
			String eName = txteName.getText();
			if (eName.equals("")) {
				showMessageDialog(null, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
			}else if (lnkPermit_list.hasPermit(eName))
			{
				Permit p = lnkPermit_list.getPermit(eName);
				Vehicle_info v = p.getVehicle();
				showMessageDialog(null, "Vehicle found", "Cancel", JOptionPane.INFORMATION_MESSAGE);
				
				txteReg.setText(v.getReg());
				txteMake.setText(v.getMake());
				txteModel.setText(v.getModel());
				txteColour.setText(v.getColour());
				txteHost.setText(p.getHostName());
				txteType.setText(permitTypes[p.getPermitType()]);
				txteWarnings.setText(String.valueOf(v.getWarning()));
				txteSuspended.setText(String.valueOf(v.getSuspended()));
				txteAccess.setText(String.valueOf(v.getAccesses()));
			}else {
				showMessageDialog(null, "Unable to find vehicle", "Cancel", JOptionPane.ERROR_MESSAGE);
				txteReg.setText("");
				txteMake.setText("");
				txteModel.setText("");
				txteColour.setText("");
				txteHost.setText("");
				txteType.setText("");
				txteWarnings.setText("");
				txteSuspended.setText("");
				txteAccess.setText("");
			}

		}else if (e.getSource()==btnClear||e.getSource()==btnClear1) {	//Status Enquiry - A member of the administration is able to obtain status details for a given user: details of permit, whether warnings are recorded, whether suspended, and how many entries to campus have occurred since the permit was issued.

			clearFields();

		}
		else if (e.getSource()==btnR) {	//Modify permit(vehicle retrieved) - A member of the administration is able to obtain status details for a given user: details of permit, whether warnings are recorded, whether suspended, and how many entries to campus have occurred since the permit was issued.
			String eName = txtmName.getText();
			if (eName.equals("")) {
				showMessageDialog(null, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
			}
			else if (lnkPermit_list.hasPermit(eName))//Display details of permit and vehicle
			{
				Permit p = lnkPermit_list.getPermit(eName);
				Vehicle_info v = p.getVehicle();
				int type =p.getPermitType();
				txtmName.setEditable(false);
				txtmReg.setText(v.getReg());
				txtmMake.setText(v.getMake());
				txtmMake.setEditable(true);
				txtmModel.setText(v.getModel());
				txtmModel.setEditable(true);
				txtmColour.setText(v.getColour());
				txtmColour.setEditable(true);
				txtmType.setText(permitTypes[p.getPermitType()]);	//THIS STILL NEEDS TO BE DROP DOWN
				txtmHost.setText(p.getHostName());
				if (type==1||type==3) {
				txtmHost.setEditable(true);
				}

				editable = true;
			}
		}else if (e.getSource()==btn6&&editable==true) {	//mofify permit(modify retrieved vehicle) - A member of the administration is able to obtain status details for a given user: details of permit, whether warnings are recorded, whether suspended, and how many entries to campus have occurred since the permit was issued.
			String eName = txtmName.getText();
			String eReg = txteReg.getText();
			Permit p = lnkPermit_list.getPermit(eName);
			Vehicle_info v = p.getVehicle();
			String make=txtmMake.getText();
			String model = txtmModel.getText();
			String colour = txtmColour.getText();
			String host = txtmHost.getText();
			int type =p.getPermitType();
			
			//display error messages
			if (make.equals("") || model.equals("")|| colour.equals("")) {
				showMessageDialog(null, "You cannot leave details blank", "Error", JOptionPane.ERROR_MESSAGE);
			}else if (type==1 && host.equals("") ) {
				showMessageDialog(null, "Day visitors require a host", "Error", JOptionPane.ERROR_MESSAGE);
			}else if (type==3 && host.equals("") ) {
				showMessageDialog(null, "Regular visitors require a host", "Error", JOptionPane.ERROR_MESSAGE);
			}
			else {
				//Update details
				v.setMake(make);
				v.setModel(model);
				v.setColour(colour);
				p.setHostName(host);

				txtmReg.setEditable(false);
				txtmMake.setEditable(false);
				txtmModel.setEditable(false);
				txtmColour.setEditable(false);
				txtmHost.setEditable(false);
				showMessageDialog(null, "Vehicle modified", "Modified", JOptionPane.INFORMATION_MESSAGE);

				editable = false;
			}

		}else if (e.getSource()==btnmClear) {	//Status Enquiry - A member of the administration is able to obtain status details for a given user: details of permit, whether warnings are recorded, whether suspended, and how many entries to campus have occurred since the permit was issued.
				//clear details
				txtmName.setText("");
				txtmReg.setText("");
				txtmMake.setText("");
				txtmModel.setText("");
				txtmColour.setText("");

				txtmType.setText("");
				txtmName.setEditable(true);
				txtmType.setEditable(false);
				txtmReg.setEditable(false);
				txtmMake.setEditable(false);
				txtmModel.setEditable(false);
				txtmColour.setEditable(false);
				txtmHost.setEditable(false);
		}

	}
	public void clearFields()//This method will clear all text fields when calle
	{
	    txtName.setText("");
	    txtReg.setText("");
	    txtMake.setText("");
	    txtModel.setText("");
	    txtColour.setText("");
	    bxType.setSelectedIndex(0);
	    txtDate.setText("");
	    txtHost.setText("");

	    txtReg2.setText("");

	    txtReg3.setText("");

	    txtReg4.setText("");
	    
	    txteReg.setText("");
	    txteMake.setText("");
	    txteModel.setText("");
	    txteColour.setText("");
	    txteHost.setText("");
	    txteType.setText("");
	    txteWarnings.setText("");
	    txteSuspended.setText("");
	    txteAccess.setText("");
		
	}
}
